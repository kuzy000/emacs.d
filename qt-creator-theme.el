(deftheme qt-creator
  "Created 2015-06-04.")

(custom-theme-set-faces
 'qt-creator
 '(cursor ((t (:background "#000000" :foreground "white"))))
 '(fixed-pitch ((t (:family "Monospace"))))
 '(variable-pitch ((t (:family "Sans Serif"))))
 '(escape-glyph ((((background dark)) (:foreground "cyan")) (((type pc)) (:foreground "magenta")) (t (:foreground "brown"))))
 '(minibuffer-prompt ((t (:foreground "#404040" :weight bold))))
 '(highlight ((t (:inverse-video nil :background "#efefef"))))
 '(region ((t (:background "#418BD4" :foreground "#ffffff"))))
 '(shadow ((t (:background "#eeeeee" :foreground "#b2b2b2"))))
 '(secondary-selection ((t (:background "#efefef"))))
 '(trailing-whitespace ((t (:foreground "#eab700" :background "#c82829"))))
 '(font-lock-builtin-face ((t (:foreground "#808000"))))
 '(font-lock-comment-delimiter-face ((t (:foreground "#808080" :slant normal))))
 '(font-lock-comment-face ((t (:foreground "#808080" :slant normal))))
 '(font-lock-constant-face ((t (:foreground "#800000"))))
 '(font-lock-doc-face ((t (:inherit font-lock-string-face :foreground "#000080"))))
 '(font-lock-function-name-face ((t (:foreground "#000000"))))
 '(font-lock-keyword-face ((t (:foreground "#808000"))))
 '(font-lock-negation-char-face ((t (:foreground "#4271ae"))))
 '(font-lock-preprocessor-face ((t (:inherit font-lock-builtin-face :foreground "#000080"))))
 '(font-lock-regexp-grouping-backslash ((t (:foreground "#eab700" :inherit (bold)))))
 '(font-lock-regexp-grouping-construct ((t (:foreground "#8959a8" :inherit (bold)))))
 '(font-lock-string-face ((t (:foreground "#008000"))))
 '(font-lock-type-face ((t (:foreground "#800080"))))
 '(font-lock-variable-name-face ((t (:foreground "#800000"))))
 '(font-lock-warning-face ((t (:weight bold :foreground "#c82829" :inherit (error)))))
 '(button ((t (:inherit (link)))))
 '(link ((t (:foreground "#0000FF" :underline t))))
 '(link-visited ((default (:inherit (link))) (((class color) (background light)) (:foreground "magenta4")) (((class color) (background dark)) (:foreground "violet"))))
 '(fringe ((t (:background "#eeeeee" :foreground "#b2b2b2"))))
 '(header-line ((t (:inherit mode-line :box nil))))
 '(tooltip ((((class color)) (:inherit (variable-pitch) :foreground "black" :background "lightyellow")) (t (:inherit (variable-pitch)))))
 '(mode-line ((t (:background "#4B4B4B" :foreground "white" :box (:line-width 1 :color "#000000") :weight normal))))
 '(mode-line-buffer-id ((t (:foreground "#ffffff" :weight bold))))
 '(mode-line-emphasis ((t (:weight bold :slant italic :foreground "#4d4d4c"))))
 '(mode-line-highlight ((t (:foreground "#ffffff" :box (:line-width 1 :color "#000000") :weight normal))))
 '(mode-line-inactive ((t (:inherit mode-line :background "#575757" :foreground "#ffffff" :box (:line-width 1 :color "#d6d6d6") :weight normal))))
 '(isearch ((t (:background "#5050ff" :foreground "white"))))
 '(isearch-fail ((t (:inverse-video t :background "#ffffff" :inherit (font-lock-warning-face)))))
 '(lazy-highlight ((t (:background "#ffef0b"))))
 '(match ((t (:background "#FFEF0B" :foreground "#000000" :inverse-video t))))
 '(next-error ((t (:inherit (region)))))
 '(query-replace ((t (:inherit (isearch)))))
 '(linum-relative-current-face ((t (:background "#eeeeee" :foreground "#808080" :weight bold))))
 '(whitespace-space ((t (:background "white" :foreground "#C0c0c0"))))
 '(whitespace-tab ((t (:background "white" :foreground "#c0c0c0"))))
 '(linum ((t (:background "#eeeeee" :foreground "#b2b2b2"))))
 '(company-tooltip ((t (:background "#eeeeee" :foreground "black"))))
 '(company-tooltip-common ((t (:foreground "#800000" :inherit company-tooltip))))
 '(company-tooltip-selection ((t (:background "#418BD4" :foreground "white"))))
 '(company-tooltip-mouse ((t (:background "#A0C5E9"))))
 '(company-tooltip-annotation ((t (:inherit company-tooltip :foreground "#800000"))))
 '(company-scrollbar-bg ((t (:inherit company-tooltip :background "#808080"))))
 '(company-scrollbar-fg ((t (:background "#4b4b4b"))))
 '(company-tooltip-common-selection ((default (:inherit (company-tooltip-selection))) (((background light)) (:foreground "darkred")) (((background dark)) (:foreground "red"))))
 '(company-preview-common ((((background light)) (:inherit (company-tooltip-selection))) (((background dark)) (:foreground "red" :inherit (company-preview)))))
 '(company-template-field ((((background dark)) (:foreground "black" :background "yellow")) (((background light)) (:foreground "black" :background "orange"))))
 '(company-echo ((t nil)))
 '(company-tooltip-search ((default (:inherit (company-tooltip-selection)))))
 '(company-preview ((((background light)) (:inherit (company-tooltip-selection))) (((background dark)) (:foreground "wheat" :background "blue4"))))
 '(company-preview-search ((((background light)) (:inherit (company-tooltip-common-selection))) (((background dark)) (:background "blue1" :inherit (company-preview)))))
 '(rainbow-delimiters-depth-1-face ((t (:foreground "#ff0400" :weight bold))))
 '(rainbow-delimiters-depth-2-face ((t (:foreground "#ff883d" :weight bold))))
 '(rainbow-delimiters-depth-3-face ((t (:foreground "#88883d" :weight bold))))
 '(rainbow-delimiters-depth-4-face ((t (:foreground "#468a00" :weight bold))))
 '(rainbow-delimiters-depth-5-face ((t (:foreground "#0000a4" :weight bold))))
 '(rainbow-delimiters-depth-6-face ((t (:foreground "#8800a4" :weight bold))))
 '(neo-expand-btn-face ((t (:foreground "#808080"))))
 '(neo-dir-link-face ((t (:foreground "#000080"))))
 '(neo-root-dir-face ((t (:foreground "#800000"))))
 '(neo-banner-face ((t (:foreground "#b2b2b2"))))
 '(neo-header-face ((t (:foreground "#b2b2b2"))))
 '(web-mode-symbol-face ((t (:inherit font-lock-constant-face))))
 '(web-mode-html-attr-name-face ((t (:inherit font-lock-constant-face))))
 '(web-mode-html-attr-equal-face ((t (:inherit default))))
 '(web-mode-html-tag-face ((t (:inherit font-lock-type-face))))
 '(default ((t (:stipple nil :background "white" :foreground "#000000" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 99 :width normal :foundry "bitstream")))))

(provide-theme 'qt-creator)
